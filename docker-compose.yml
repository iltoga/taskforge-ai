services:
    db:
        container_name: postgres-srv
        image: postgres:16
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_DB: ${DB_NAME}
        networks:
            - dockernet
        volumes:
            - type: bind
              source: ${DB_PATH}
              target: /var/lib/postgresql/data
              bind:
                propagation: rslave
            - ./.docker/db-init:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
            interval: 10s
            timeout: 5s
            retries: 10
            start_period: 30s

    taskforge-ai:
        depends_on:
            db:
                condition: service_healthy
        container_name: taskforge-ai
        build:
            context: .
            dockerfile: Dockerfile
            target: runner
            args:
                - NODE_ENV=production
                - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
                - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
                - NEXT_PUBLIC_DEBUG=${NEXT_PUBLIC_DEBUG}
                - OPENAI_API_KEY=${OPENAI_API_KEY}
                - GIT_COMMIT_SHA=${GIT_COMMIT_SHA:-latest}
            # Enable BuildKit features for caching
            extra_hosts:
                - "host.docker.internal:host-gateway"
            cache_from:
                - taskforge-ai:latest
                - taskforge-ai:base
                - taskforge-ai:deps
                - taskforge-ai:builder
        restart: unless-stopped
        ports:
            - '3000:3000'
        environment:
            - NODE_ENV=production
            - NEXT_PWA_ENABLED=true
            - AUTH_TRUST_HOST=true
        env_file:
            - .env
        networks:
            - dockernet
        healthcheck:
            test:
                [
                    'CMD',
                    'wget',
                    '--no-verbose',
                    '--tries=1',
                    '--spider',
                    'http://localhost:3000',
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        # Optimized resource limits
        deploy:
            resources:
                limits:
                    memory: 2G
                    cpus: '1.0'
                reservations:
                    memory: 512M
                    cpus: '0.5'

networks:
    dockernet:
        external: true
        name: dockernet
