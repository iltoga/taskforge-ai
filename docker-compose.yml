services:
    db:
        container_name: postgres-srv
        image: postgres:16
        restart: unless-stopped
        environment:
            POSTGRES_USER:  ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_DB: ${DB_NAME}
        networks:
            - dockernet
        volumes:
            - type: bind
              source: ${DB_PATH}
              target: /var/lib/postgresql/data
              bind:
                propagation: rslave
            - ./docker/db-init:/docker-entrypoint-initdb.d
    taskforge-ai:
        depends_on:
            - db
        container_name: taskforge-ai
        build:
            context: .
            dockerfile: Dockerfile
            args:
                - NODE_ENV=production
                - NEXT_PUBLIC_BACKEND_URL=${APP_URL}
                - NEXT_PUBLIC_WS_URL=${WS_URL}
                - NEXT_PUBLIC_DEBUG=${NEXT_PUBLIC_DEBUG}
                - OPENAI_API_KEY=${OPENAI_API_KEY}
        restart: unless-stopped
        ports:
            - '3000:3000'
        environment:
            - NODE_ENV=production
            - NEXT_PWA_ENABLED=true
            - AUTH_TRUST_HOST=true

        env_file:
            - .env
        networks:
            - dockernet
        healthcheck:
            test:
                [
                    'CMD',
                    'wget',
                    '--no-verbose',
                    '--tries=1',
                    '--spider',
                    'http://localhost:3000',
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        # Add resource limits
        deploy:
            resources:
                limits:
                    memory: 3G
                reservations:
                    memory: 1G

networks:
    dockernet:
        external: true
        name: dockernet
